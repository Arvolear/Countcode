#!/bin/bash

path="."
depth=-1
types=""
verbose=0
total=0

function help
{
    echo -e "countcodelines -p [path] -d [number] -t \"[type] [type]\" -v -h"
    echo -e "\t-p [path] - path to the directory"
    echo -e "\t-d [number] - depth of the tree"
    echo -e "\t-t \"[type] [type]\" - types of the files to calculate lines for"
    echo -e "\t-v - verbose output"
    echo -e "\t-h - help"

    exit 0
}

while [ -n "$1" ]
do
    case $1 in
        -d) depth=$2
            shift;;

        -p) path=$2
            shift;;

        -t) types="$2"
            shift;;

        -v) verbose=1;;

        -h) help;;

        *) echo "Wrong argument"
           exit 0;;
    esac

    shift
done

if [[ ! -e $path || -f $path ]]
then
    echo "Wrong path"
    exit 0
fi

function count
{
    local curDepth=$(($1 + 1))
    local curPath=$2

    if [[ $depth -ne -1 && $curDepth -gt $depth ]]
    then
        return
    fi

    for i in `ls $curPath`
    do
        local curFile=$"$curPath/$i"

        if [[ -d $curFile ]]
        then
            count $curDepth $curFile
        else
            for j in $types
            do
                if [[ $i == *.$j ]]
                then
                    total=$(($total + `wc -l < $curFile`))

                    if [[ $verbose -eq 1 ]]
                    then
                        echo $curFile `wc -l < $curFile`
                    fi

                    break
                fi
            done
        fi
    done   
}

count -1 $path

echo Amount of code lines: $total
